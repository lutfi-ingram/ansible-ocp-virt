---
- name: Install virtctl and run httpd setup in VM
  hosts: localhost
  gather_facts: false
  vars:
    virtctl_version: "v1.5.2"
    virtctl_url: "https://github.com/kubevirt/kubevirt/releases/download/{{ virtctl_version }}/virtctl-{{ virtctl_version }}-linux-amd64"
    virtctl_path: "/usr/local/bin/virtctl"
    vm_name: "fedora-httpd"
    vm_namespace: "yl-aap"
    username: "lutpiero"
    password: "P@$$w0rd"

  tasks:          
    - name: Ensure pip is installed
      package:
        name: python3-pip
        state: present
    
    - name: Install pexpect via pip
      pip:
        name: pexpect
        executable: pip3
        
    - name: Check if virtctl is already installed
      stat:
        path: "{{ virtctl_path }}"
      register: virtctl_check

    - name: Download virtctl binary if not present
      get_url:
        url: "{{ virtctl_url }}"
        dest: "/tmp/virtctl"
        mode: '0755'
      when: not virtctl_check.stat.exists

    - name: Move virtctl to /usr/local/bin if not present
      become: true
      copy:
        src: "/tmp/virtctl"
        dest: "{{ virtctl_path }}"
        remote_src: yes
        mode: '0755'
      when: not virtctl_check.stat.exists
    - name: Check connection by listing a pod
      kubernetes.core.k8s_info:
        kind: Pod
        namespace: "{{ vm_namespace }}"

    - name: Find existing kubeconfig
      stat:
        path: "{{ item }}"
      with_items:
        - "{{ lookup('env', 'KUBECONFIG') | default('~/.kube/config', true) }}"
        - "/etc/kubernetes/admin.conf"
        - "/root/.kube/config"
      register: kubeconfig_candidates
    
    - name: Set kubeconfig path if found
      set_fact:
        kubeconfig_path: "{{ item.item }}"
      when: item.stat.exists
      loop: "{{ kubeconfig_candidates.results }}"
      
    - name: Generate script from template
      template:
        src: virtctl-console.py.j2
        dest: /tmp/virtctl-console.py
        mode: '0755'

    - name: Run the script
      command: python3 /tmp/virtctl-console.py
        
